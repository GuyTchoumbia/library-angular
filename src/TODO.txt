module document
 - filtres:
done* deplacer vers le service
done*create map(key, value) where key = document.property and value = nomber of occurences of said property in results
	for filter listing
done	* html/css
done	* links to result page of each filter
 - list: 
done	* sort select: ascending/descending by name, etc
done	* html/css
done	* links to auteur and editeur
 - details:
	* html/css
	* links to auteur/ editeur
	* exemplaire field ( => quantity property?)
	* link to user
	* available/ not available (rented/not)
	* if logged, reservation (reserved property on document)	

 - common
 	* user class
	* document: 
done:		borrowed property
		NB: BORROWED PROPERTY IS INFERRED BACK SIDE FROM THE PRESENCE OR NOT OF A USER PROPERTY ASSOCIATED WITH THE BOOK. 
		THE USER PROPERTY MUST NOT BE ACCESSIBLE TO THE USER, ONLY THE BORROWED PROPERTY
		RECIPROCLY, THE USER CLASS IS ACCESSIBLE TO ITS OWN USER, ONLY THEN CAN HE ACCESS ITS BORROWED DOCUMENT (DOCUMENTS LIST) PROPERTY,
		AS WELL AS ITS RESERVED (LIST) PROPERTY.
		RESERVED PROPERTY CAN BE SET BY THE USER, BUT NOT READ (!!!)

 - searchbar
	* login dialog html css

 - AuthService:
	* AuthGuard for user settings page

 - Account Settings page
	* html/css
	* modify user
	* see rented documents
	* see reserved documents

 - Advanced Search
	*html/css
	*integration/modificatio  of API